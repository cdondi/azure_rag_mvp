# Stage 1: Build stage
FROM python:3.11-slim AS builder

# Install only essential build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copy and install Python dependencies first (better layer caching)
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt \
    && find /root/.local -name "*.pyc" -delete \
    && find /root/.local -name "__pycache__" -type d -exec rm -rf {} + || true

# Stage 2: Production stage
FROM python:3.11-slim AS production

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy only the installed packages
COPY --from=builder /root/.local /home/appuser/.local

WORKDIR /app

# Copy application files in optimal order (least to most frequently changed)
COPY chunks_with_embeddings.json .
COPY logging_config.py .
COPY services.py .
COPY auth.py .
COPY templates/ ./templates/
COPY static/ ./static/
COPY main.py .

# Set ownership and user
RUN chown -R appuser:appuser /app
USER appuser

# Set environment
ENV PATH=/home/appuser/.local/bin:$PATH \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

EXPOSE 8000

CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]