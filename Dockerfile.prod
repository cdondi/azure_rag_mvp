# Stage 1: Build stage (includes build tools, dev dependencies)
# Installs build tools and dependencies
FROM python:3.11-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Stage 2: Production stage (minimal runtime)
# Only copies what's needed to run
FROM python:3.11-slim AS production

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Set work directory
WORKDIR /app

# Copy application code
COPY main.py .
COPY services.py .
COPY logging_config.py .
COPY .env .
COPY templates/ ./templates/
COPY static/ ./static/
COPY chunks_with_embeddings.json .

# Change ownership to non-root user for security
RUN chown -R appuser:appuser /app
USER appuser

# Add user's local bin to PATH
ENV PATH=/home/appuser/.local/bin:$PATH

EXPOSE 8000

# # Enhanced health check using detailed endpoint
# TODO : Troubleshoot health check issues inside the container. External endpoints are working but this keeps returning "unhealthy"
# HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
#     CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:8000/health', timeout=5)" || exit 1

CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]